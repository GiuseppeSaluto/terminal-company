use crate::models::types::{Item, Monster};
use lazy_static::lazy_static;

pub const MOONS: &[&str] = &[
    "EXPERIMENTATION",
    "ASSURANCE",
    "VOW",
    "OFFENSE",
    "MARCH",
    "ADAMANCE",
    "REND",
    "DINE",
    "TITAN",
    "ARTIFICE",
    "EMBRION",
    "LIQUIDATION",
    "COMPANY",
];

lazy_static! {
    pub static ref STORE_ITEMS: Vec<Item> = vec![
        Item {
            name: String::from("Shovel"),
            price: 30,
            weight: 8.0,
            description: String::from("A standard-issue shovel. Digs things."),
        },
        Item {
            name: String::from("Spray Paint"),
            price: 50,
            weight: 0.0,
            description: String::from("For marking paths or walls."),
        },
        Item {
            name: String::from("Stun Grenade"),
            price: 40,
            weight: 5.0,
            description: String::from("A non-lethal grenade to stun creatures."),
        },
        Item {
            name: String::from("TZP-Inhalant"),
            price: 120,
            weight: 0.0,
            description: String::from(
                "Makes you move faster and use less stamina + Squeaky voice."
            ),
        },
        Item {
            name: String::from("Walkie-Talkie"),
            price: 12,
            weight: 0.0,
            description: String::from(
                "Allows Map Wide Communication (Uses Battery Charge) (Has Large Charge)."
            ),
        },
        Item {
            name: String::from("Zap Gun"),
            price: 400,
            weight: 11.0,
            description: String::from("Scans for Monsters and Stuns them (uses battery charge)."),
        },
        Item {
            name: String::from("Weed Killer"),
            price: 25,
            weight: 0.0,
            description: String::from("Sprays a non-lethal poison. (Counts as a sound source)"),
        },
        Item {
            name: String::from("Company Cruiser"),
            price: 400,
            weight: 0.0,
            description: String::from(
                "Can be bought for free one time if destroyed or lost. Cannot be carried."
            ),
        },
        Item {
            name: String::from("Belt Bag"),
            price: 45,
            weight: 15.5,
            description: String::from(
                "A small bag that can be carried in a single hand. Holds 4 items."
            ),
        },
        Item {
            name: String::from("Survival Kit"),
            price: 138,
            weight: 0.0,
            description: String::from(
                "A kit containing 4 Flashlights, 4 Walkie-talkies, and a Shovel."
            ),
        },
        Item {
            name: String::from("Flashlight"),
            price: 15,
            weight: 5.0,
            description: String::from(
                "A small portable light source. (Uses battery charge) (Has Large Charge)"
            ),
        },
        Item {
            name: String::from("Pro-flashlight"),
            price: 25,
            weight: 5.0,
            description: String::from(
                "A powerful portable light source. (Uses battery charge) (Has Large Charge)"
            ),
        },
    ];
}

pub const SHIP_UPGRADE: &[&str] = &[
    "Teleporter",
    "Inverse Teleporter",
    "Loud Horn",
    "Signal Translator",
];

pub const SHIP_DECORATIONS: &[&str] = &["Cozy Lights", "Decoy Suit", "Brown Suit", "Purple Suit"];

lazy_static! {
    pub static ref BESTIARY: Vec<Monster> = vec![
    Monster {
            name: "Circuit Bees".to_string(),
            entity_type: "Daytime Entity".to_string(),
            behavior: "Defensive / Aggressive".to_string(),
            danger_level: Some(90),
            power_level: 1.0,
            spawn_condition: "Outside (daytime, hives on ground)".to_string(),
            moons: vec![
                "MARCH".to_string(),
                "VOW".to_string(),
                "ARTIFICE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
                "ADAMANCE".to_string(),
            ],
            speed: None,
            notes: Some("Highly aggressive when hive is threatened; discharge electricity and attack all living beings.".to_string()),
        },
        Monster {
            name: "Baboon Hawk".to_string(),
            entity_type: "Outdoor Entity".to_string(),
            behavior: "Trooping / Territorial".to_string(),
            danger_level: None,
            power_level: 0.5,
            spawn_condition: "Outside (daytime)".to_string(),
            moons: vec![
                "ADAMANCE".to_string(),
                "MARCH".to_string(),
                "OFFENSE".to_string(),
                "VOW".to_string(),
                "ASSURANCE".to_string(),
                "ARTIFICE".to_string(),
            ],
            speed: None,
            notes: Some("Tall birds with primate heads; travel in troops with hierarchy and sometimes steal scrap.".to_string()),
        },
        Monster {
            name: "Bracken".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Stalking / Hiding".to_string(),
            danger_level: Some(70),
            power_level: 3.0,
            spawn_condition: "Inside (sneak/ambush)".to_string(),
            moons: vec![
                "VOW".to_string(),
                "MARCH".to_string(),
                "REND".to_string(),
                "TITAN".to_string(),
                "ADAMANCE".to_string(),
                "ARTIFICE".to_string(),
                "DINE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
                "OFFENSE".to_string(),
                "EMBRION".to_string(),
            ],
            speed: Some("Fast when attacking".to_string()),
            notes: Some("Timid creature that hides in shadows; becomes aggressive when disturbed.".to_string()),
        },
        Monster {
            name: "Jester".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Roaming / Lurking / Explosive".to_string(),
            danger_level: Some(100),
            power_level: 3.0,
            spawn_condition: "Rare indoor spawn".to_string(),
            moons: vec![
                "REND".to_string(),
                "TITAN".to_string(),
                "ARTIFICE".to_string(),
                "DINE".to_string(),
                "ADAMANCE".to_string(),
                "MARCH".to_string(),
            ],
            speed: Some("Slow then very fast".to_string()),
            notes: Some("A jack-in-the-box like entity: harmless until a timer or trigger, then deadly.".to_string()),
        },
        Monster {
            name: "Forest Guardian".to_string(),
            entity_type: "Outdoor Entity".to_string(),
            behavior: "Roaming / Sprinting / Territorial".to_string(),
            danger_level: Some(50),
            power_level: 3.0,
            spawn_condition: "Outside (active during darkness/eclipses)".to_string(),
            moons: vec![
                "VOW".to_string(),
                "DINE".to_string(),
                "REND".to_string(),
                "MARCH".to_string(),
                "TITAN".to_string(),
                "ARTIFICE".to_string(),
                "ADAMANCE".to_string(),
                "OFFENSE".to_string(),
                "EMBRION".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
            ],
            speed: Some("Fast, long reach".to_string()),
            notes: Some("Large, fast creature; strong sight but not sound-sensitive; may grab players leaving their ship.".to_string()),
        },
        Monster {
            name: "Hygrodere".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Chasing".to_string(),
            danger_level: Some(0),
            power_level: 1.0,
            spawn_condition: "Inside, reacts to noise/heat".to_string(),
            moons: vec![
                "OFFENSE".to_string(),
                "EMBRION".to_string(),
                "EXPERIMENTATION".to_string(),
                "VOW".to_string(),
                "ASSURANCE".to_string(),
                "ARTIFICE".to_string(),
                "MARCH".to_string(),
                "ADAMANCE".to_string(),
                "TITAN".to_string(),
                "DINE".to_string(),
                "REND".to_string(),
            ],
            speed: None,
            notes: Some("Slow but relentless; reacts to sound and heat; easy to outrun if moving faster.".to_string()),
        },
        Monster {
            name: "Hoarding Bug".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Looting / Territorial".to_string(),
            danger_level: Some(0),
            power_level: 1.0,
            spawn_condition: "Inside, around stash/loot".to_string(),
            moons: vec![
                "EMBRION".to_string(),
                "ASSURANCE".to_string(),
                "VOW".to_string(),
                "ADAMANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "MARCH".to_string(),
                "ARTIFICE".to_string(),
                "DINE".to_string(),
                "OFFENSE".to_string(),
                "TITAN".to_string(),
            ],
            speed: Some("Fast to enter/out of rooms".to_string()),
            notes: Some("Roams collecting and hoarding scrap; typically non-aggressive until its nest is disturbed.".to_string()),
        },
        Monster {
            name: "Locusts".to_string(),
            entity_type: "Daytime Entity".to_string(),
            behavior: "Roaming (docile)".to_string(),
            danger_level: Some(0),
            power_level: 1.0,
            spawn_condition: "Outside (daytime, attracted to light)".to_string(),
            moons: vec![
                "VOW".to_string(),
                "ADAMANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
                "MARCH".to_string(),
            ],
            speed: None,
            notes: Some("Harmless insects attracted to light; docile and not a threat.".to_string()),
        },
        Monster {
            name: "Fungal Lizard".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Territorial / Defensive".to_string(),
            danger_level: Some(1),
            power_level: 1.0,
            spawn_condition: "Inside (prefers fungal areas)".to_string(),
            moons: vec![
                "EMBRION".to_string(),
                "EXPERIMENTATION".to_string(),
                "ADAMANCE".to_string(),
                "ARTIFICE".to_string(),
                "VOW".to_string(),
                "ASSURANCE".to_string(),
                "OFFENSE".to_string(),
                "DINE".to_string(),
                "MARCH".to_string(),
                "TITAN".to_string(),
                "REND".to_string(),
            ],
            speed: Some("Slow to react".to_string()),
            notes: Some("Herbivore that puffs spores and flees when startled.".to_string()),
        },
        Monster {
            name: "Manticoil".to_string(),
            entity_type: "Daytime Entity".to_string(),
            behavior: "Roaming".to_string(),
            danger_level: Some(0),
            power_level: 1.0,
            spawn_condition: "Outside (daytime)".to_string(),
            moons: vec![
                "EMBRION".to_string(),
                "OFFENSE".to_string(),
                "ARTIFICE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ADAMANCE".to_string(),
                "ASSURANCE".to_string(),
                "VOW".to_string(),
                "MARCH".to_string(),
            ],
            speed: None,
            notes: Some("Small harmless flying creatures; scatter when disturbed.".to_string()),
        },
        Monster {
            name: "Masked Mimic".to_string(),
            entity_type: "Indoor/Outdoor Entity".to_string(),
            behavior: "Mimic / Ambush".to_string(),
            danger_level: None,
            power_level: 1.0,
            spawn_condition: "Anywhere (indoor/outdoor, mimics objects/players)".to_string(),
            moons: vec![
                "ARTIFICE".to_string(),
                "REND".to_string(),
                "TITAN".to_string(),
                "ADAMANCE".to_string(),
            ],
            speed: Some("Fast when revealed".to_string()),
            notes: Some("Mimics with theatrical masks; behaves like players, can instantly kill if discovered close.".to_string()),
        },
        Monster {
            name: "Trapping Flea".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Roaming / Trapping".to_string(),
            danger_level: Some(30),
            power_level: 1.0,
            spawn_condition: "Inside (builds traps)".to_string(),
            moons: vec![
                "ASSURANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "VOW".to_string(),
                "MARCH".to_string(),
                "OFFENSE".to_string(),
                "ADAMANCE".to_string(),
                "TITAN".to_string(),
                "REND".to_string(),
                "ARTIFICE".to_string(),
                "EMBRION".to_string(),
                "DINE".to_string(),
            ],
            speed: Some("Medium, sets traps quickly".to_string()),
            notes: Some("Small adult flea that patrols interiors and constructs traps; attacks swiftly when triggered.".to_string()),
        },
        Monster {
            name: "Ghost Girl".to_string(),
            entity_type: "Indoor/Outdoor Entity".to_string(),
            behavior: "Haunting / Stalking".to_string(),
            danger_level: None,
            power_level: 2.0,
            spawn_condition: "Anywhere (targets a single player persistently)".to_string(),
            moons: vec![
                "REND".to_string(),
                "TITAN".to_string(),
                "ARTIFICE".to_string(),
                "DINE".to_string(),
                "ADAMANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
            ],
            speed: Some("Fast, persistent".to_string()),
            notes: Some("Invisible to others and obsesses on one target, eventually killing the target with a flying head attack.".to_string()),
        },
        Monster {
            name: "Bunker Spider".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Patrolling / Scouting / Chasing".to_string(),
            danger_level: Some(30),
            power_level: 2.0,
            spawn_condition: "Inside (bunkers, corridors)".to_string(),
            moons: vec![
                "ASSURANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "VOW".to_string(),
                "MARCH".to_string(),
                "OFFENSE".to_string(),
                "ADAMANCE".to_string(),
                "TITAN".to_string(),
                "REND".to_string(),
                "ARTIFICE".to_string(),
                "EMBRION".to_string(),
                "DINE".to_string(),
            ],
            speed: Some("Patrol speed medium".to_string()),
            notes: Some("Large armoured spider with a sting; patrols labyrinthine bunkers and attacks on sight.".to_string()),
        },
        Monster {
            name: "Nutcracker".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Scanning / Guarding / Shooting".to_string(),
            danger_level: Some(100),
            power_level: 1.0,
            spawn_condition: "Inside (statue-like sentries)".to_string(),
            moons: vec![
                "REND".to_string(),
                "TITAN".to_string(),
                "ARTIFICE".to_string(),
                "EMBRION".to_string(),
                "DINE".to_string(),
                "ADAMANCE".to_string(),
                "MARCH".to_string(),
                "OFFENSE".to_string(),
                "EXPERIMENTATION".to_string(),
                "ASSURANCE".to_string(),
            ],
            speed: Some("Quick reaction".to_string()),
            notes: Some("Nutcracker statues that scan and shoot players; drop firearms/ammo on death.".to_string()),
        },
        Monster {
            name: "Blind Hound".to_string(),
            entity_type: "Outdoor Entity".to_string(),
            behavior: "Pack hunting / Sound-tracking".to_string(),
            danger_level: Some(70),
            power_level: 2.0,
            spawn_condition: "Outside (night/eclipses)".to_string(),
            moons: vec![
                "TITAN".to_string(),
                "EXPERIMENTATION".to_string(),
                "REND".to_string(),
                "OFFENSE".to_string(),
                "ASSURANCE".to_string(),
                "DINE".to_string(),
                "ADAMANCE".to_string(),
                "ARTIFICE".to_string(),
                "MARCH".to_string(),
                "EMBRION".to_string(),
                "VOW".to_string(),
            ],
            speed: None,
            notes: Some("Large blind canine that hunts with sound cues; howls alert nearby pack members.".to_string()),
        },
        Monster {
            name: "Springhead".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Roaming / Stalking".to_string(),
            danger_level: Some(80),
            power_level: 1.0,
            spawn_condition: "Inside (mannequin-like ambush)".to_string(),
            moons: vec![
                "OFFENSE".to_string(),
                "TITAN".to_string(),
                "REND".to_string(),
                "EMBRION".to_string(),
                "ARTIFICE".to_string(),
                "DINE".to_string(),
                "MARCH".to_string(),
                "ADAMANCE".to_string(),
                "VOW".to_string(),
                "ASSURANCE".to_string(),
            ],
            speed: Some("Starts still, then snaps fast".to_string()),
            notes: Some("Mannequin-like entities that remain still while watched and strike when unwatched; lethal on contact.".to_string()),
        },
        Monster {
            name: "Thumper".to_string(),
            entity_type: "Indoor Entity".to_string(),
            behavior: "Aggressive / Ambush".to_string(),
            danger_level: Some(70),
            power_level: 3.0,
            spawn_condition: "Inside (large predator)".to_string(),
            moons: vec![
                "OFFENSE".to_string(),
                "MARCH".to_string(),
                "ADAMANCE".to_string(),
                "EMBRION".to_string(),
                "TITAN".to_string(),
                "ARTIFICE".to_string(),
                "ASSURANCE".to_string(),
                "EXPERIMENTATION".to_string(),
                "DINE".to_string(),
                "VOW".to_string(),
            ],
            speed: Some("Large, heavy movement".to_string()),
            notes: Some("Large carnivorous predator; hunts with sight and vibration rather than sound.".to_string()),
        },
    ];
}
